openapi: "3.0.0"
info:
  title: Test Payments API
  description: Test Payments API
  version: 1.0.0

tags:
- name: Payments
  description: A collection of Payments APIs
  
servers:
- url: 'http://localhost:8090/ms-payments-api/api/v1.0.0'
  
paths:
  /payments/orders:
    post:
      summary: Creates a new payment order 
      operationId: CreateNewPaymentOrder
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOrder"
      responses:
        '201':
          description: Created payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
  /getDynamicType/orders:
     get:
      summary: Get all DynamicType details
      operationId: GetDynamicOrder
      tags:
        - Payments
      parameters:
      - name: id
        in: query
        description: Dynamic Id
        required: false
        schema:
          type: integer
          format: int32
      - name: order
        in: query
        description: details
        required: false
        schema:
          type: string	  
      responses:
        '200':
          description: Get DynamicType details
          content:
            application/json: 
              schema:
                type: object
  /payments/upload:
    post:
      tags:
      - Payments
      summary: "uploads an document"
      description: ""
      operationId: "FileUpload"
      requestBody:
        description: "file to upload"
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileUploadRequest"
      responses: 
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /payments/download/{fileName}:
    get:
      tags:
      - Payments
      parameters:
      - name: fileName
        in: path
        description: FileName
        required: true
        schema:
          type: string
      summary: "downloads an document"
      description: ""
      operationId: "FileDownload"
      responses: 
        '201':
          description: Created
          content:
            application/octet-stream:
              schema:
                 $ref: '#/components/schemas/DownloadApiResponse'
  /payments/delete/{fileName}:
    delete:
      tags:
        - Payments
      parameters:
        - name: fileName
          in: path
          description: FileName
          required: true
          schema:
            type: string
      summary: Deletes an document
      description: ''
      operationId: FileDelete
      responses:
        '200':
          description: Deleted SuccessFully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: File Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /payments/allorders:
    post:
      summary: Creates all the payment orders in a list (Bulk)
      operationId: CreateNewPaymentOrders
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOrdersItems"
      responses:
        '201':
          description: Created payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/AllPaymentStatus"
                
  /payments/allorders/update:
    put:
      summary: updates all the payment orders in a list (Bulk)
      operationId: UpdateNewPaymentOrders
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentStatusList"
      responses:
        '200':
          description: Update payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/AllPaymentStatus"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
                
  /payments/allorders/delete/{paymentIds}:
    delete:
      summary: Deletes all the payment orders in a list (Bulk)
      operationId: DeletePaymentOrders
      tags:
        - Payments
      parameters:
      - name: paymentIds
        in: path
        description: Payment ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: delete payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/AllPaymentStatus"
                
  /payments/orders/{paymentId}:
    put:
      summary: Updates an existing payment order 
      operationId: UpdatePaymentOrder
      tags:
        - Payments
      parameters:
      - name: paymentId
        in: path
        description: Payment IDs
        required: true
        schema:
          type: string
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentStatus"
      responses:
        '200':
          description: Update payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
          
    get:
      summary: Get a payment order
      operationId: GetPaymentOrder
      x-altkey: true
      tags:
        - Payments
      parameters:
      - name: paymentId
        in: path
        description: Payment ID
        required: true
        schema:
          type: string
      - name: getFromStorageFile
        in: query
        description: getFromStorageFile
        required: false
        schema:
          type: string
          
      responses:
        '200':
          description: Get payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrderStatus"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
        '404':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
                
  /payments/orders/invoke:              
    get:
      summary: Invoke State Ingester
      operationId: invokePaymentState
      tags:
        - Payments
      parameters:
      - name: paymentStateId
        in: query
        description: paymentStateId
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: invokePaymentState
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrderStatus" 
        '400':
          description: Invalid paymentStateId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
                
  /payments/orders/currency:
    get:
      summary: Get a payment order currency
      operationId: GetPaymentOrderCurrency
      tags:
        - Payments
      parameters:
      - name: currency
        in: query
        description: Currency ID
        required: true
        schema:
          type: string
          enum:
            - USD
            - INR
      responses:
        '200':
          description: Get payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrders"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
                
  /payments/orders/currencymulti:
    get:
      summary: Get a payment order currency
      operationId: GetPaymentOrderCurrencyMulti
      tags:
        - Payments
      parameters:
      - name: currency
        in: query
        description: Currency ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Get payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrders"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"              

  /payments/validations:
    get:
      summary: Get a payment order currency
      operationId: GetInputValidation
      tags:
        - Payments
      parameters:
        - name: paymentId
          in: query
          description: PAYMENT ID
          required: true
          schema:
            type: string
            minLength: 5
            maxLength: 20
            nullable: true
      responses:
        '200':
          description: Get payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
    post:
      summary: Performs validation for input data
      operationId: DoInputValidation
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDetails"
      responses:
        '201':
          description: Created payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentDetails"
  /payments/createBalanceAndTransaction:
    post:
      summary: Creat balance and transaction entry 
      operationId: CreateBalanceAndTransaction
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultiEventDataModels"
      responses:
        '201':
          description: Created balance and transaction entry
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
  /payments/employee:
    post:
      summary: Creates an employee
      operationId: CreateEmployee
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeRequest"
      responses:
        '200':
          description: Created employee
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/EmployeeStatus"
  /payments/employee/{employeeId}:
    get:
      summary: Fetches an employee
      operationId: GetEmployee
      tags:
        - Payments
      parameters:
      - name: employeeId
        in: path
        description: Employee ID
        required: true
        schema:
          type: string
      - name: orgCode    
        in: query
        description: Organisation code
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Fetched employee
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Employee"
    put:
      summary: Updates an existing employee
      operationId: UpdateEmployee
      tags:
        - Payments
      parameters:
      - name: employeeId
        in: path
        description: Employee IDs
        required: true
        schema:
          type: string
      - name: orgCode    
        in: query
        description: Organisation code
        required: true
        schema:
          type: string    
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeRequest"
      responses:
        '200':
          description: Update employee
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/EmployeeStatus"
        '400':
          description: Invalid employee Id
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
    delete:
      summary: deletes an employee
      operationId: DeleteEmployee
      tags:
        - Payments
      parameters:
      - name: employeeId
        in: path
        description: Employee ID
        required: true
        schema:
          type: string
      - name: orgCode    
        in: query
        description: Organisation code
        required: true
        schema:
          type: string
      responses:
        '200':
          description: deleted employee
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/EmployeeStatus"
  /payments/validate:
    post:
      summary: Validate a Impl Class 
      operationId: CreateValidateRequest
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultiEventDataModels"
      responses:
        '201':
          description: Created balance and transaction entry
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
  /account/validate:
    get:
      summary: Get Single Account
      operationId: GetAccountValidate
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'

  /currency:
    get:
      summary: Get Single Account
      operationId: GetCurrency
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumCurrencies'
  /config/getConfig:
    get:
      summary: Get Single Account
      operationId: GetConfig
      parameters:
        - name: ConfigName
          in: query
          description: Config Name
          required: true
          schema:
            type: string
        - name: ConfigGroup
          in: query
          description: Config Group
          schema:
            type: string
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'  
components:
  schemas:
    Card:
      properties:
        cardid:
          type: integer
          format: int64
          nullable: true
          description: Identifier that indicates the card number
        cardname:
          type: string
          nullable: true
          description: Identifier that indicates the card name
        cardlimit:
          type: number
          nullable: true
          description: Identifier that indicates the card limit
    PaymentMethod:
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 999999
          description: Identifier that indicates the payment method reference id          
        name:
          type: string
          minLength: 2
          maxLength: 20
          description: Indicates the payment method name          
        extensionData:
          type: object
          nullable: true
          description: Indicates the extensionData with the payment method          
        card:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Card"
    ExchangeRate:
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          description: Indicates the reference id for ExchangeRate          
        name:
          type: string
          nullable: true
          description: Identifier that indicates the ExchangeRate name          
        value:
          type: number
          nullable: true
          description: Identifier that indicates the ExchangeRate value          
    PayeeDetails:
      properties:
        payeeName:
          type: string
          nullable: true
          description: Identifier that indicates the payee name          
        payeeType:
          type: string
          nullable: true
          description: Identifier that indicates the payee type          
          
    EnumCurrency:
      type: string
      description: Identifier the currency of type Enum
      x-deprictionallowed: true
      enum:
        - USD
        - INR
    EnumCurrencies:
      type: array
      items:
        $ref: '#/components/schemas/EnumCurrency'
        
    TransactionDetails:
      properties:
        fromAccount:
          type: string
          nullable: true
          description: Indicates the Account from which the amount to be debited         
        toAccount:
          type: string
          nullable: true
          description: Indicates the Account for which the amount to be credited
        paymentReference:
          type: string
          x-referencetype: paymentref
          nullable: true
          description: Identifier that indicates the reference to the payment made
        paymentDetails:
          type: string
          nullable: true
          description: Identifier that indicates the details of the payment
      
    PaymentOrder:
      allOf:
        - $ref: "#/components/schemas/TransactionDetails"
      properties:
        currency:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/EnumCurrency"
        amount:
          type: number
          nullable: true
          description: Identifier that indicate an Total Amount
        expires:
          type: integer
          format: int64
          nullable: true
          description: Indicates the expires attribute
        fileContent:
          type: string
          format: binary
          nullable: true
          description: Indicates the FileContent
        fileReadWrite:
          type: string
          format: binary
          nullable: true
          description: Indicates the FileReadWrite
        fileOverWrite:
          type: boolean
          nullable: true
          description: Indicates the FileOverWrite
        paymentDate:
          type: string
          format: date  
          nullable: true
          description: Identifier that indicates date of payment
        paymentMethod:
          allOf:
          - $ref: "#/components/schemas/PaymentMethod"
        exchangeRates:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/ExchangeRate"
        payeeDetails:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/PayeeDetails'
        extensionData:
          type: object
          nullable: true
          description: Indicates the Extension data
        descriptions:
          type: array
          nullable: true
          items:
            type: string
          description: Indicates the Payment description
          
    PaymentOrders:
      type: array
      items:
        $ref: "#/components/schemas/PaymentOrder"
        
    PaymentOrdersItems:
      properties:
        paymentOrders:
          allOf:
          - $ref: '#/components/schemas/PaymentOrders'
        
    PaymentStatus:
      properties:
        debitAccount:
          type: string
          description: Indicates the Account from which the amount to be debited
        paymentId:
          type: string
          description: Indicates the unique reference for the transaction   
        status:
          type: string
          description: Indicates the status for the transaction
        fileReadWrite:
          type: string
          format: binary
          description: Indicates the FileReadWrite
        details:
          type: string
          description: Indicates the details of the transaction
        extensionData:
          type: object
          description: placeholder to get the extension data    
        paymentMethod:
          allOf:
          - $ref: "#/components/schemas/PaymentMethod"
        exchangeRates:
          type: array
          items:
            $ref: "#/components/schemas/ExchangeRate"
           
    AllPaymentStatus:
      type: array
      items:
        $ref: "#/components/schemas/PaymentStatus"
        
    PaymentStatusList:
      properties:
        paymentStatus:
          allOf:
          - $ref: "#/components/schemas/AllPaymentStatus"
          
    PaymentOrderStatus:
      properties:
        paymentOrder:
          allOf: 
          - $ref: "#/components/schemas/PaymentOrder"
        paymentStatus:
          $ref: "#/components/schemas/PaymentStatus"
          
    FailureMessage:
      properties:
        code:
          type: string
          description: Indicates the failure code
        message:
          type: string
          description: Indicates the failure message
    ErrorSchema:
      type: array
      items:
        $ref: "#/components/schemas/FailureMessage"
    DocumentDetails:
      type: "object"
      properties:
        documentId:
          type: string
          description: Identifier that indicates the unique id for the document
        documentName:
          type: string
          description: Identifier that indicates the document name
    ApiResponse:
      type: "object"
      properties:
        message:
          type: "string"
          description: Identifier that indicates the api response message          
    FileUploadRequest:
      type: object
      properties:
        documentDetails:
          allOf:
          - $ref: '#/components/schemas/DocumentDetails'
        documentFile:
          type: array
          items:
            type: string
            format: binary
            description: Identifier that indicates the document file of type array            
    DownloadApiResponse:
      type: "object"
    PaymentDetails:
      properties:
        paymentId:
          type: integer
          description: Identifier that indicates the payment id involved in the payment details          
        personalAccNo:
          type: integer
          format: int32
          minimum: 5
          maximum: 50
          description: Identifier that indicates the personal account number          
        branchId:
          type: integer
          format: int64
          minimum: 5
          maximum: 50
          description: Identifier that indicates the branch id
        monthCount:
          type: number
          description: Identifier that indicates the month count
        penaltyInterest:
          type: number
          format: decimal
          minimum: 5
          maximum: 50
          description: Indicates the penalty interest
        yearWiseInterest:
          type: number
          format: double
          minimum: 1
          maximum: 60
          description: Indicates the year wise interest
        userIdenfication:
          type: number
          format: biginteger
          minimum: 10
          maximum: 90
          description: Indicates the user identification number
        paymentMethod:
          type: string
          description: Indicates the payment method
        fileReadWrite:
          type: string
          format: binary
          description: Indicates the file read write attribute
        paymentDate:
          type: string
          format: timestamp
          description: Indicates the date of payment
        actualDate:
          type: string
          format: date
          description: Indicates the actual date of payment
        socialSecurityNo:
          type: string
          format: uuid
          description: Indicates the social security number
        seniorCitizen:
          type: boolean
          description: Indicates the customer is a senior citizen or not
        paymentOrders:
          type: array
          items:
            $ref: "#/components/schemas/PaymentOrder"  
        PaymentOrdersItems:
          type: object
          properties:
            paymentOrders:
              allOf:
                - $ref: '#/components/schemas/PaymentOrders'
        currency:
          allOf:
          - $ref: "#/components/schemas/EnumCurrency"  
        extensionData:
            allOf:
            - $ref: "paymentorderschema.json#/components/schemas/CustomerDetails"
    Balance:
      properties:
        recId:
          type: string
          description: Indicates the unique record id for the balance
        stmtProcDate:
          type: string
          description: Indicates the statement processing date
        coCode:
          type: string
          description: Indicates the company code for the balance
        onlineClearedBal:
          type: string
          format: decimal
          description: Indicates the online cleared balance
        workingBalance:
          type: string
          format: decimal
          description: Indicates the working balance
        onlineActualBal:
          type: string
          format: decimal
          description: Indicates the online actual balance
        currency:
          type: string
          description: Indicates the currency type
        customer:
          type: string
          description: Indicates the customer record
        product:
          type: string
          description: Indicates the product details
        processingTime:
          type: string
          format: date
          description: Indicates the procesing time
        extensionData:
          type: object
          description: Indicates the extension data
    Transaction:
      properties:
        recId:
          type: string
          description: Indicates the unique record id for the transaction
        companyCode:
          type: string
          description: Indicates the company code for the balance
        amountLcy:
          type: string
          description: Indicates the amountLcy
        processingDate:
          type: string
          description: Indicates the procesing date
        transactionCode:
          type: string
          description: Indicates the transaction code
        valueDate:
          type: string
          description: Indicates the value date
        accountNumber:
          type: string
          description: Indicates the account number
        ourReference:
          type: string
          description: Indicates the internal reference
        theirReference:
          type: string
          description: Indicates the external reference
        accountOfficer:
          type: string
          description: Identifier that indicates the account officer
        transReference:
          type: string
          description: Identifier that indicates the trans reference
        bookingDate:
          type: string
          description: Indicates the booking date
        customerId:
          type: string
          description: Indicates the customer id
        currency:
          type: string
          description: Indicates the customer type
        extensionData:
          type: object
    MultiEventDataModels:
     properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
        balances:
          type: array
          items:
            $ref: "#/components/schemas/Balance"
    Employee:
      properties:
        employeeId:
          type: string
          description: Indicates the Employee Id          
        name:
          type: string
          description: Indicates the Employee Name
        orgCode:
          type: string  
          description: Indicates the organaisation code
    EmployeeRequest:
      properties:
        name:
          type: string
          description: Indicates the Employee request
        orgCode:
          type: string
          description: Indicates the organaisation code
    EmployeeStatus:
      properties:
        employeeId:
          type: string
          description: Indicates the unique reference id of the employee
        status:
          type: string
          description: Indicates the status of the employee
        count:
          type: integer
          description: Indicates the count of the employees
    Config:
      properties:
        ConfigName:
          type: string
          description: Identifier that indicates the Config Name