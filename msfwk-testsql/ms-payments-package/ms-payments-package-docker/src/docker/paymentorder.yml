#-------------------------------------------------------------
#- Docker compose base definition file to run containers.
#-----------------------------------------------------------
---
version: '3.6'
services:
  db-service:
    build:
      context: ${DB_CONTEXT}
      dockerfile: Dockerfile
      args:
        DB_BASE_IMAGE: ${DB_BASE_IMAGE}
    image: ${DB_IMAGE}
    shm_size: '1gb'
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: payments
  
  api:
    build:
      context: ${API_CONTEXT}
      dockerfile: Dockerfile
      args:
        API_BASE_IMAGE: ${API_BASE_IMAGE}
        api_artifactid: ${api_artifactid}
        api_java_options: ${java_options} ${REMOTE_DEBUG}
    image: ${API_IMAGE}
    depends_on:
      - db-service
    ports:
      - "8090:8080"
      - "40500:40500"
    environment:
      HOST: db-service
      PORT: 3306
      DATABASE_NAME: payments
      DB_USERNAME: root
      DB_PASSWORD: root
      className_CreateNewPaymentOrder: com.temenos.microservice.payments.function.CreateNewPaymentOrderImpl
      VALIDATE_PAYMENT_ORDER: "false"
      className_GetPaymentOrders: com.temenos.microservice.payments.function.GetPaymentOrdersImpl
      className_UpdatePaymentOrder: com.temenos.microservice.payments.function.UpdatePaymentOrderImpl
      className_GetPaymentOrder: com.temenos.microservice.payments.function.GetPaymentOrderImpl
      DATABASE_KEY: sql
      PDP_CONFIG: classpath:xacml/payments-pdp-config.xml
  
  ingester:
    build:
      context: ${INGESTER_CONTEXT}
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: ${INGESTER_APP_BASE_IMAGE}
        artifactid: ${ingester_artifactid}
        java_options: ${java_options} ${REMOTE_DEBUG}
    image: ${INGESTER_IMAGE}
    depends_on:
      - db-service
    ports:
      - "40503:40500"
    environment:
      HOST: db-service
      PORT: 3306
      DATABASE_NAME: payments
      DB_USERNAME: root
      DB_PASSWORD: root
      temn.msf.name: PaymentOrder
      temn.msf.stream.vendor: kafka
      temn.msf.schema.registry.url: http://schema-registry:8081
      temn.msf.stream.kafka.bootstrap.servers: kafka:29092
      temn.msf.ingest.source.stream: table-update-paymentorder
      temn.msf.ingest.source.stream.consumergroup.id: msf-paymentorder-ingester-consumer
      temn.msf.ingest.sink.error.stream: error-paymentorder
      temn.msf.ingest.sink.error.stream.producer.id: msf-paymentorder-ingester-error-producer
      temn.msf.security.authz.enabled: "false"
      PAYMENT_ORDEREvent: com.temenos.microservice.payments.ingester.PaymentorderIngesterUpdater
      DATABASE_KEY: sql
