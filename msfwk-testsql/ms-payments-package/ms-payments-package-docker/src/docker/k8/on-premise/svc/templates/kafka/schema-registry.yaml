apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: kafka
spec:
  replicas: {{ .Values.schemaregistryreplicacount }}
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
      - name: schema-registry
        image: "{{ .Values.image.schemaregistry.repository }}:{{ .Values.image.schemaregistry.tag | default .Chart.AppVersion }}"
        ports:
        - containerPort: 8081
        env:
          # Use secret in real usage
        - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
          value: {{ .Values.env.schemaregistry.SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS }} 
        - name: SCHEMA_REGISTRY_HOST_NAME
          value: {{ .Values.env.schemaregistry.SCHEMA_REGISTRY_HOST_NAME }} 
        - name: SCHEMA_REGISTRY_LISTENERS
          value: {{ .Values.env.schemaregistry.SCHEMA_REGISTRY_LISTENERS }} 
        - name: SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT
          value: {{ .Values.env.schemaregistry.SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT | quote }} 
        - name: SCHEMA_REGISTRY_CUB_ZK_TIMEOUT
          value: {{ .Values.env.schemaregistry.SCHEMA_REGISTRY_CUB_ZK_TIMEOUT | quote }}             
        - name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
          value: {{ .Values.env.schemaregistry.SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL }} 
        command:
        - bash
        - -c
        - unset SCHEMA_REGISTRY_PORT; /etc/confluent/docker/run           
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: schema-registry
  name: schema-registry-svc
  namespace: kafka
spec:
  type: {{ .Values.service.schemaregistry.type }}
  selector:
    app: schema-registry
  ports:
  - port: {{ .Values.service.schemaregistry.port }}
    targetPort: {{ .Values.service.schemaregistry.targetport }}
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: schema-registry
  name: schema-registry
  namespace: kafka
spec:
  type: {{ .Values.service.schemaregistrynp.type }}
  selector:
    app: schema-registry
  ports:
  - port: {{ .Values.service.schemaregistrynp.port }} 
    nodePort: {{ .Values.service.schemaregistrynp.nodeport }}    