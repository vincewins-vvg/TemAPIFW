apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: payments-ingester-avro
  namespace: default
spec:
  template:
    spec:
      containers:
        - image: dev.local/temenos/ms-paymentorder-ingester:DEV
          ports:
          - name: http1
            containerPort: 8081
          env:
            - name: DATABASE_KEY
              value: sql
            - name: HOST
              value: payments-db-service
            - name: DATABASE_NAME
              value: payments
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              value: password
            - name: DRIVER_NAME
              value: com.mysql.jdbc.Driver
            - name: DIALECT
              value: org.hibernate.dialect.MySQL5InnoDBDialect
            - name: DB_CONNECTION_URL
              value: jdbc:mysql://paymentorder-db-service:3306/payments
            - name: MAX_POOL_SIZE
              value: "5"
            - name: MIN_POOL_SIZE
              value: "1"
            - name: temn.msf.name
              value: PaymentOrder
            - name: tem.msf.disableInbox
              value: "true"
            - name: temn.msf.security.authz.enabled
              value: "false"
            - name: EXECUTION_ENV
              value: TEST
            - name: temn.msf.ingest.event.ingester
              value: com.temenos.microservice.framework.core.ingester.MicroserviceIngester
            - name: PAYMENT_ORDEREvent
              value: com.temenos.microservice.payments.entity.PaymentOrder
            - name: temn.msf.schema.registry.url
              value: "Payment.Order"
            - name: temn.config.file.path
              value: mapping/
            - name: temn.ingester.mapping.enabled
              value: "true"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: payments-ingester-command
  namespace: default
spec:
  template:
    spec:
      containers:
        - image: dev.local/temenos/ms-paymentorder-ingester:DEV
          ports:
          - name: http1
            containerPort: 8081
          env:
            - name: DATABASE_KEY
              value: sql
            - name: HOST
              value: payments-db-service
            - name: DATABASE_NAME
              value: payments
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              value: password
            - name: DRIVER_NAME
              value: com.mysql.jdbc.Driver
            - name: DIALECT
              value: org.hibernate.dialect.MySQL5InnoDBDialect
            - name: DB_CONNECTION_URL
              value: jdbc:mysql://paymentorder-db-service:3306/payments
            - name: MAX_POOL_SIZE
              value: "5"
            - name: MIN_POOL_SIZE
              value: "1"
            - name: temn.msf.name
              value: PaymentOrder
            - name: temn.msf.security.authz.enabled
              value: "false"
            - name: temn.msf.stream.vendor
              value: kafka
            - name: temn.msf.stream.kafka.bootstrap.servers
              value: my-cluster-kafka-bootstrap.kafka:9092
            - name: temn.msf.ingest.source.stream
              value: ms-paymentorder-inbox-topic
            - name: temn.msf.ingest.source.stream.consumergroup.id
              value: ms-paymentorder-ingester-consumer
            - name: temn.msf.ingest.sink.error.stream
              value: ms-paymentorder-inbox-error-topic
            - name: temn.msf.ingest.sink.error.stream.producer.id
              value: ms-paymentorder-ingester-error-producer
            - name: temn.msf.ingest.generic.ingester
              value: com.temenos.microservice.framework.core.ingester.GenericCommandSTBinaryIngester
            - name: temn.msf.exec.env
              value: server
            - name: temn.msf.stream.outbox.topic
              value: ms-paymentorder-outbox-topic
            - name: temn.msf.function.class.CreateNewPaymentOrder
              value: com.temenos.microservice.payments.function.CreateNewPaymentOrderImpl
            - name: VALIDATE_PAYMENT_ORDER
              value: "false"
            - name: class.package.name
              value: com.temenos.microservice.payments.function
            - name: class.inbox.dao
              value: com.temenos.microservice.framework.core.inbox.InboxDaoImpl
            - name: class.outbox.dao
              value: com.temenos.microservice.framework.core.outbox.OutboxDaoImpl
            - name: temn.msf.ingest.is.avro.event.ingester
              value: "false"
            - name: temn.queue.impl
              value: kafka
            - name: temn.msf.ingest.is.cloud.event
              value: "true"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: payments-ingester-eventingester
  namespace: default
spec:
  template:
    spec:
      containers:
        - image: dev.local/temenos/ms-paymentorder-ingester:DEV
          ports:
          - name: http1
            containerPort: 8081
          env:
            - name: DATABASE_KEY
              value: sql
            - name: HOST
              value: payments-db-service
            - name: DATABASE_NAME
              value: payments
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              value: password
            - name: DRIVER_NAME
              value: com.mysql.jdbc.Driver
            - name: DIALECT
              value: org.hibernate.dialect.MySQL5InnoDBDialect
            - name: DB_CONNECTION_URL
              value: jdbc:mysql://paymentorder-db-service:3306/payments
            - name: MAX_POOL_SIZE
              value: "5"
            - name: MIN_POOL_SIZE
              value: "1"
            - name: temn.msf.name
              value: PaymentOrder
            - name: temn.msf.stream.vendor
              value: kafka
            - name: temn.queue.impl
              value: kafka
            - name: temn.msf.stream.kafka.bootstrap.servers
              value: my-cluster-kafka-bootstrap.kafka:9092
            - name: temn.msf.ingest.source.stream
              value: paymentorder-event-topic
            - name: temn.msf.ingest.source.stream.consumergroup.id
              value: ms-paymentorder-ingester-consumer
            - name: temn.msf.security.authz.enabled
              value: "false"
            - name: temn.msf.ingest.sink.error.enabled
              value: "false"
            - name: temn.msf.ingest.sink.error.stream.producer.id
              value: ms-paymentorder-ingester-error-producer
            - name: temn.msf.ingest.generic.ingester
              value: com.temenos.microservice.framework.core.ingester.GenericCommandSTBinaryIngester
            - name: temn.msf.exec.env
              value: server
            - name: temn.msf.function.class.CreateNewPaymentOrder
              value: com.temenos.microservice.payments.function.CreateNewPaymentOrderImpl
            - name: temn.msf.ingest.event.processor
              value: com.temenos.microservice.payments.ingester.EventHandlerImpl
            - name: class.package.name
              value: com.temenos.microservice.payments.function
            - name: class.inbox.dao
              value: com.temenos.microservice.framework.core.inbox.InboxDaoImpl
            - name: class.outbox.dao
              value: com.temenos.microservice.framework.core.outbox.OutboxDaoImpl
            - name: temn.msf.ingest.is.avro.event.ingester
              value: "false"
            - name: temn.msf.ingest.is.cloud.event
              value: "true"
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: payments-ingester-eventdelivery
  namespace: default
spec:
  template:
    spec:
      containers:
        - image: dev.local/temenos/ms-paymentorder-ingester:DEV
          ports:
          - name: http1
            containerPort: 8081
          env:
            - name: DATABASE_KEY
              value: sql
            - name: HOST
              value: payments-db-service
            - name: DATABASE_NAME
              value: payments
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              value: password
            - name: DRIVER_NAME
              value: com.mysql.jdbc.Driver
            - name: DIALECT
              value: org.hibernate.dialect.MySQL5InnoDBDialect
            - name: DB_CONNECTION_URL
              value: jdbc:mysql://paymentorder-db-service:3306/payments
            - name: MAX_POOL_SIZE
              value: "5"
            - name: MIN_POOL_SIZE
              value: "1"
            - name: temn.msf.name
              value: PaymentOrder
            - name: temn.msf.security.authz.enabled
              value: "false"
            - name: temn.msf.stream.vendor
              value: kafka
            - name: temn.msf.stream.kafka.bootstrap.servers
              value: my-cluster-kafka-bootstrap.kafka:9092
            - name: temn.msf.ingest.source.stream
              value: ms-paymentorder-inbox-topic
            - name: temn.msf.ingest.source.stream.consumergroup.id
              value: ms-paymentorder-ingester-consumer
            - name: temn.msf.ingest.sink.error.stream
              value: ms-paymentorder-inbox-error-topic
            - name: temn.msf.ingest.sink.error.stream.producer.id
              value: ms-paymentorder-ingester-error-producer
            - name: temn.msf.ingest.generic.ingester
              value: com.temenos.microservice.framework.core.ingester.MSKafkaOutboxEventListener
            - name: temn.msf.exec.env
              value: server
            - name: temn.msf.stream.outbox.topic
              value: ms-paymentorder-outbox-topic
            - name: temn.msf.function.class.CreateNewPaymentOrder
              value: com.temenos.microservice.payments.function.CreateNewPaymentOrderImpl
            - name: VALIDATE_PAYMENT_ORDER
              value: "false"
            - name: class.package.name
              value: com.temenos.microservice.payments.function
            - name: class.inbox.dao
              value: com.temenos.microservice.framework.core.inbox.InboxDaoImpl
            - name: class.outbox.dao
              value: com.temenos.microservice.framework.core.outbox.OutboxDaoImpl
            - name: temn.msf.ingest.is.avro.event.ingester
              value: "false"
            - name: temn.queue.impl
              value: kafka
            - name: temn.msf.ingest.is.cloud.event
              value: "true"