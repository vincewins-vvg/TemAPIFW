openapi: "3.0.0"
info:
  title: Test Payments API
  description: Test Payments API
  version: 1.0.0

tags:
- name: Payments
  description: A collection of Payments APIs
  
paths:
  /payments/upload:
    post:
      tags:
      - Payments
      summary: "uploads an document"
      description: ""
      operationId: "FileUpload"
      requestBody:
        description: "file to upload"
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileUploadRequest"
      responses: 
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /payments/download/{fileName}:
    get:
      tags:
      - Payments
      parameters:
      - name: fileName
        in: path
        description: FileName
        required: true
        schema:
          type: string
      summary: "downloads an document"
      description: ""
      operationId: "FileDownload"
      responses: 
        '201':
          description: Created
          content:
            application/octet-stream:
              schema:
                 $ref: '#/components/schemas/DownloadApiResponse'
  /payments/orders:
    post:
      summary: Creates a new payment order 
      operationId: CreateNewPaymentOrder
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentOrder"
      responses:
        '201':
          description: Created payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
  /payments/orders/{paymentId}:
    put:
      summary: Updates an existing payment order 
      operationId: UpdatePaymentOrder
      tags:
        - Payments
      parameters:
      - name: paymentId
        in: path
        description: Payment ID
        required: true
        schema:
          type: string
          
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentStatus"
      responses:
        '200':
          description: Update payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
          
    get:
      summary: Get a payment order
      operationId: GetPaymentOrder
      x-altkey: true
      tags:
        - Payments
      parameters:
      - name: paymentId
        in: path
        description: Payment ID
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: Get payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrderStatus"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
                
  /payments/orders/invoke:              
    get:
      summary: Invoke State Ingester
      operationId: invokePaymentState
      tags:
        - Payments
      parameters:
      - name: paymentStateId
        in: query
        description: paymentStateId
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: invokePaymentState
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrderStatus" 
        '400':
          description: Invalid paymentStateId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"
                
  /payments/orders/currency:
    get:
      summary: Get a payment order currency
      operationId: GetPaymentOrderCurrency
      tags:
        - Payments
      parameters:
      - name: currency
        in: query
        description: Currency ID
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: Get payment order
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentOrders"
        '400':
          description: Invalid paymentId
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorSchema"                

components:
  schemas:
    Card:
      properties:
        cardid:
          type: integer
          format: int64
        cardname:
          type: string
        cardlimit:
          type: number
    PaymentMethod:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        extensionData:
          type: object  
        card:
          allOf:
          - $ref: "#/components/schemas/Card"
    ExchangeRate:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: number
    PayeeDetails:
      properties:
        payeeName:
          type: string
        payeeType:
          type: string                  
    EnumCurrency:
      type: string
      x-deprictionallowed: true
      enum:
        - USD
        - INR
        
    TransactionDetails:
      properties:
        fromAccount:
          type: string
        toAccount:
          type: string
        paymentReference:
          type: string
          x-referencetype: paymentref
        paymentDetails:
          type: string
    
    PaymentOrder:
      allOf:
        - $ref: "#/components/schemas/TransactionDetails"
      properties:
        currency:
          allOf:
          - $ref: "#/components/schemas/EnumCurrency"
        amount:
          type: number
        expires:
          type: integer
          format: int64
        fileContent:
          type: string
          format: binary
        extensionData:
          type: object  	
        paymentDate:
          type: string
          format: date
        paymentMethod:
          allOf:
          - $ref: "#/components/schemas/PaymentMethod"
        exchangeRates:
          type: array
          items:
            $ref: "#/components/schemas/ExchangeRate"
        payeeDetails:
          allOf:
          - $ref: '#/components/schemas/PayeeDetails'
        descriptions:
          type: array
          items:
            type: string
          
    PaymentOrders:
      type: array
      items:
        $ref: "#/components/schemas/PaymentOrder"
        
    PaymentStatus:
      properties:
        debitAccount:
          type: string
        paymentId:
          type: string
        status:
          type: string
        details:
          type: string
        paymentMethod:
          allOf:
          - $ref: "#/components/schemas/PaymentMethod"
        exchangeRates:
          type: array
          items:
            $ref: "#/components/schemas/ExchangeRate"
          
    PaymentOrderStatus:
      properties:
        paymentOrder:
          allOf: 
          - $ref: "#/components/schemas/PaymentOrder"
        paymentStatus:
          $ref: "#/components/schemas/PaymentStatus"
    
    FailureMessage:
      properties:
        code:
          type: string
        message:
          type: string
    ErrorSchema:
      type: array
      items:
        $ref: "#/components/schemas/FailureMessage"
    DocumentDetails:
      type: "object"
      properties:
        documentId:
          type: string
        documentName:
          type: string
    ApiResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"
    FileUploadRequest:
      type: object
      properties:
        documentDetails:
          allOf:
          - $ref: '#/components/schemas/DocumentDetails'
        documentFile:
          type: array
          items:
            type: string
            format: binary
    BinaryContent:
      type: "object"
      properties:
       documentFile:
         type: string
         format: binary
       filename:
         type: string
    DownloadApiResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        type:
          type: "string"
        message:
          type: "string"
        binaryfile:
          type: array
          items:
            $ref: '#/components/schemas/BinaryContent'
       
