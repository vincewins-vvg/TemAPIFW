openapi: 3.0.0
info:
  title: Test Payments API
  description: Test Payments API
  version: 1.0.0
tags:
  - name: Payments
    description: A collection of Payments APIs
servers:
  - url: 'http://localhost:8090/ms-payments-api/api/v1.0.0'
paths:
  /payments/orders:
    post:
      summary: Creates a new payment order
      operationId: CreateNewPaymentOrder
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrder'
      responses:
        '201':
          description: Created payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
  /payments/upload:
    post:
      tags:
        - Payments
      summary: uploads an document
      description: ''
      operationId: FileUpload
      requestBody:
        description: file to upload
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/payments/download/{fileName}':
    get:
      tags:
        - Payments
      parameters:
        - name: fileName
          in: path
          description: FileName
          required: true
          schema:
            type: string
      summary: downloads an document
      description: ''
      operationId: FileDownload
      responses:
        '201':
          description: Created
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/DownloadApiResponse'
  '/payments/delete/{fileName}':
    delete:
      tags:
        - Payments
      parameters:
        - name: fileName
          in: path
          description: FileName
          required: true
          schema:
            type: string
      summary: Deletes an document
      description: ''
      operationId: FileDelete
      responses:
        '200':
          description: Deleted SuccessFully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: File Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /payments/allorders:
    post:
      summary: Creates all the payment orders in a list (Bulk)
      operationId: CreateNewPaymentOrders
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrdersItems'
      responses:
        '201':
          description: Created payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPaymentStatus'
  /payments/allorders/update:
    put:
      summary: updates all the payment orders in a list (Bulk)
      operationId: UpdateNewPaymentOrders
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusList'
      responses:
        '200':
          description: Update payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPaymentStatus'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  '/payments/allorders/delete/{paymentIds}':
    delete:
      summary: Deletes all the payment orders in a list (Bulk)
      operationId: DeletePaymentOrders
      tags:
        - Payments
      parameters:
        - name: paymentIds
          in: path
          description: Payment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllPaymentStatus'
  '/payments/orders/{paymentId}':
    put:
      summary: Updates an existing payment order
      operationId: UpdatePaymentOrder
      tags:
        - Payments
      parameters:
        - name: paymentId
          in: path
          description: Payment IDs
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatus'
      responses:
        '200':
          description: Update payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
    get:
      summary: Get a payment order
      operationId: GetPaymentOrder
      x-altkey: true
      tags:
        - Payments
      parameters:
        - name: paymentId
          in: path
          description: Payment ID
          required: true
          schema:
            type: string
        - name: getFromStorageFile
          in: query
          description: getFromStorageFile
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Get payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderStatus'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
        '404':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
    delete:
      summary: Delete payment order with payment order Id
      operationId: deletePaymentOrder
      tags:
        - Payments
      parameters:
        - name: paymentId
          in: path
          description: Payment ID
          required: true
          schema:
            type: string
        - name: debitAccount
          in: query
          description: Payment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
  /payments/orders/update:
    put:
      summary: Updates all the payment orders which satisfy the criteria
      operationId: UpdateStatus
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentStatus'
      responses:
        '200':
          description: Update payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /payments/orders/delete:
    delete:
      summary: Deletes all the payment orders which satisfy the criteria
      operationId: DeleteWithCondition
      tags:
        - Payments
      parameters:
        - name: status
          in: query
          description: status to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
  /payments/customers:
    post:
      summary: Create a payment Customer
      operationId: createCustomer
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Created Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerStatus'
    get:
      summary: Get a Customers
      operationId: getCustomers
      tags:
        - Payments
      parameters:
        - name: account
          in: query
          description: payment Group
          required: false
          schema:
            type: string
        - name: loanTypes
          in: query
          description: payment Type
          required: false
          schema:
            type: string
        - name: fromDate
          in: query
          description: from date
          required: false
          schema:
            type: string
        - name: toDate
          in: query
          description: to Date
          required: false
          schema:
            type: string
      responses:
        '200':
          description: getCustomers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
        '404':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /payments/orders/invoke:
    get:
      summary: Invoke State Ingester
      operationId: invokePaymentState
      tags:
        - Payments
      parameters:
        - name: paymentStateId
          in: query
          description: paymentStateId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: invokePaymentState
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderStatus'
        '400':
          description: Invalid paymentStateId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /payments/orders/currency:
    get:
      summary: Get a payment order currency
      operationId: GetPaymentOrderCurrency
      tags:
        - Payments
      parameters:
        - name: currency
          in: query
          description: Currency ID
          required: true
          schema:
            type: string
            enum:
              - INR
              - USD
      responses:
        '200':
          description: Get payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrders'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
  /payments/validations:
    get:
      summary: Get a payment order currency
      operationId: GetInputValidation
      tags:
        - Payments
      parameters:
        - name: paymentId
          in: query
          description: PAYMENT ID
          required: true
          schema:
            type: string
            minLength: 5
            maxLength: 20
            nullable: true
      responses:
        '200':
          description: Get payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        '400':
          description: Invalid paymentId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
    post:
      summary: Performs validation for input data
      operationId: DoInputValidation
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDetails'
      responses:
        '201':
          description: Created payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetails'
    
  '/user/{userId}':
    get:
      summary: Get Single User
      operationId: GetUser
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: getUserErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
  '/users':
    get:
      summary: Search Users by name
      operationId: searchUsers
      parameters:
        - name: name
          in: query
          description: User Name
          required: true
          schema:
            type: string
        - name: email
          in: query
          description: Email ID
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: getUserErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardErrorResponse'
  /user:
    post:
      summary: Creates a user
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Created User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStatus'
  '/account/{accountId}':
    get:
      summary: Get Single Account
      operationId: GetAccount
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      summary: Update Single Account
      operationId: UpdateAccount
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      summary: Delete Single Account
      operationId: DeleteAccount
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An Account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
  /account:
    post:
      summary: Creates an Account
      operationId: CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
  /payments/createBalanceAndTransaction:
    post:
      summary: Creat balance and transaction entry 
      operationId: CreateBalanceAndTransaction
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultiEventDataModels"
      responses:
        '201':
          description: Created balance and transaction entry
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
  /payments/validate:
    post:
      summary: Validate a Impl Class 
      operationId: CreateValidateRequest
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultiEventDataModels"
      responses:
        '201':
          description: Created balance and transaction entry
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PaymentStatus"
  /account/validate:
    get:
      summary: Get Single Account
      operationId: GetAccountValidate
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /currency:
    get:
      summary: Get Single Account
      operationId: GetCurrency
      responses:
        '200':
          description: An account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumCurrencies'  
                
components:
  schemas:
    Card:
      properties:
        cardid:
          type: integer
          format: int64
          nullable: true
          description: Identifier that indicates the card number
        cardname:
          type: string
          nullable: true
          description: Identifier that indicates the card name
        cardlimit:
          type: number
          nullable: true
          description: Identifier that indicates the card limit
    PaymentMethod:
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 999999
          description: Identifier that indicates the payment method reference id          
        name:
          type: string
          minLength: 2
          maxLength: 20
          description: Indicates the payment method name          
        extensionData:
          type: object
          nullable: true
        card:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Card'
    ExchangeRate:
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          description: Indicates the reference id for ExchangeRate          
        name:
          type: string
          nullable: true
          description: Identifier that indicates the ExchangeRate name          
        value:
          type: number
          nullable: true
          description: Identifier that indicates the ExchangeRate value          
    PayeeDetails:
      properties:
        payeeName:
          type: string
          nullable: true
          description: Identifier that indicates the payee name          
        payeeType:
          type: string
          nullable: true
          description: Identifier that indicates the payee type          
          
    EnumCurrency:
      type: string
      description: Identifier the currency of type Enum.      
      x-deprictionallowed: true
      enum:
        - USD
        - INR
    EnumCurrencies:
      type: array
      items:
        $ref: '#/components/schemas/EnumCurrency'
    CriteriaDetails:
      properties:
        nameOfCriteria:
          type: string
          nullable: true
          description: Identifier that indicates the name of the criteria
        valueOfCriteria:
          type: string
          nullable: true
          description: Identifier that indicates the value of the criteria          
    TransactionDetails:
      properties:
        fromAccount:
          type: string
          nullable: true
          description: Indicates the Account from which the amount to be debited         
        toAccount:
          type: string
          nullable: true
          description: Indicates the Account for which the amount to be credited
        paymentReference:
          type: string
          x-referencetype: paymentref
          nullable: true
          description: Identifier that indicates the reference to the payment made
        paymentDetails:
          type: string
          nullable: true
          description: Identifier that indicates the payment details
    Customer:
      properties:
        customerId:
          type: string
          description: Identifier that indicates the unique reference id for customer          
        customerName:
          type: string
          description: Indicates the customer name
        account:
          type: string
          description: Indicates the customer account details
        loanTypes:
          type: array
          description: Indicates the customer loan types
          items:
            type: string
        dateOfJoining:
          type: string
          format: date
          nullable: true
          description: Identifier that indicates the date of joining of the customer
    CustomerStatus:
      properties:
        customerId:
          type: string
          description: Identifier that indicates the unique reference id for customer
        status:
          type: string
          description: Indicates the customer currenct status
        accountStatus:
          type: boolean
          description: Indicates the customer account status
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    PaymentOrder:
      allOf:
        - $ref: '#/components/schemas/TransactionDetails'
      properties:
        currency:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/EnumCurrency'
        amount:
          type: number
          nullable: true
          description: Identifier that indicate an Total Amount
        expires:
          type: integer
          format: int64
          nullable: true
          description: Indicates the expires attribute
        fileContent:
          type: string
          format: binary
          nullable: true
          description: Indicates the FileContent
        fileReadWrite:
          type: string
          format: binary
          nullable: true
          description: Indicates the FileReadWrite
        fileOverWrite:
          type: boolean
          nullable: true
          description: Indicates the FileOverWrite
        extensionData:
          type: object
          nullable: true
          description: Identifier that indicates date of payment
        paymentDate:
          type: string
          format: date
          nullable: true
          description: Identifier that indicates date of payment
        paymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
        exchangeRates:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ExchangeRate'
        payeeDetails:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/PayeeDetails'
        descriptions:
          type: array
          nullable: true
          items:
            type: string
          description: Indicates the Payment description
          
    PaymentOrders:
      type: array
      items:
        $ref: '#/components/schemas/PaymentOrder'
    PaymentOrdersItems:
      properties:
        paymentOrders:
          allOf:
            - $ref: '#/components/schemas/PaymentOrders'
    PaymentStatus:
      properties:
        debitAccount:
          type: string
          description: Indicates the Account from which the amount to be debited
        paymentId:
          type: string
          description: Indicates the unique reference for the transaction          
        status:
          type: string
          description: Indicates the status for the transaction
        fileReadWrite:
          type: string
          format: binary
          description: Indicates the FileReadWrite          
        details:
          type: string
          description: Indicates the details of the transaction
        paymentMethod:
          allOf:
            - $ref: '#/components/schemas/PaymentMethod'
        exchangeRates:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeRate'
    AllPaymentStatus:
      type: array
      items:
        $ref: '#/components/schemas/PaymentStatus'
    PaymentStatusList:
      properties:
        paymentStatus:
          allOf:
            - $ref: '#/components/schemas/AllPaymentStatus'
    PaymentOrderStatus:
      properties:
        paymentOrder:
          allOf:
            - $ref: '#/components/schemas/PaymentOrder'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
    FailureMessage:
      properties:
        code:
          type: string
          description: Indicates the failure code
        message:
          type: string
          description: Indicates the failure message
    ErrorSchema:
      type: array
      items:
        $ref: '#/components/schemas/FailureMessage'
    DocumentDetails:
      type: object
      properties:
        documentId:
          type: string
          description: Identifier that indicates the unique id for the document
        documentName:
          type: string
          description: Identifier that indicates the document name
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Identifier that indicates the api response message
    FileUploadRequest:
      type: object
      properties:
        documentDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentDetails'
        documentFile:
          type: array
          items:
            type: string
            format: binary
            description: Identifier that indicates the document file of type array
    DownloadApiResponse:
      type: object
    UpdatePaymentStatus:
      properties:
        criteriaDetails:
          type: array
          items:
            $ref: '#/components/schemas/CriteriaDetails'
        status:
          type: string
    PaymentDetails:
      properties:
        paymentId:
          type: integer
          description: Identifier that indicates the payment id involved in the payment details
        personalAccNo:
          type: integer
          format: int32
          minimum: 5
          maximum: 50
          description: Identifier that indicates the personal account number
        branchId:
          type: integer
          format: int64
          minimum: 5
          maximum: 50
          description: Identifier that indicates the branch id
        monthCount:
          type: number
          description: Identifier that indicates the month count
        penaltyInterest:
          type: number
          format: decimal
          minimum: 5
          maximum: 50
          description: Indicates the penalty interest
        yearWiseInterest:
          type: number
          format: double
          minimum: 1
          maximum: 60
          description: Indicates the year wise interest
        userIdenfication:
          type: number
          format: biginteger
          minimum: 10
          maximum: 90
          description: Indicates the user identification number
        paymentMethod:
          type: string
          description: Indicates the payment method
        fileReadWrite:
          type: string
          format: binary
          description: Indicates the file read write attribute
        paymentDate:
          type: string
          format: timestamp
          description: Indicates the date of payment
        actualDate:
          type: string
          format: date
          description: Indicates the actual date of payment
        socialSecurityNo:
          type: string
          format: uuid
          description: Indicates the social security number
        seniorCitizen:
          type: boolean
          description: Indicates the customer is a senior citizen or not
        paymentOrders:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOrder'
        PaymentOrdersItems:
          type: object
          properties:
            paymentOrders:
              allOf:
                - $ref: '#/components/schemas/PaymentOrders'
        currency:
          allOf:
            - $ref: '#/components/schemas/EnumCurrency'
        extensionData:
          allOf:
            - $ref: 'paymentorderschema.json#/components/schemas/CustomerDetails'
    User:
      properties:
        userId:
          type: string
          description: Indicates the unique reference id for the user
        name:
          type: string
          description: Indicates the name of the user
        email:
          type: string
          description: Indicates the email id of the user
    Users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    StandardErrorResponse:
      properties:
        errorCode:
          type: string
          description: Indicates the error code for standard error response
    UserStatus:
      properties:
        userId:
          type: string
          description: Indicates the unique reference id for the user
        status:
          type: string
          description: Indicates the status of the user          
    Account:
      properties:
        accountId:
          type: string
          description: Identifier that indicates the account id
        accountName:
          type: string
          description: Identifier that indicates the account name 
        accountType:
          type: string
          description: Identifier that indicates the account type
        branch:
          type: string
          description: Identifier that indicates the branch details
    AccountStatus:
      properties:
        accountId:
          type: string
          description: Identifier that indicates the account id
        modifiedCount:
          type: integer
          description: Identifier that indicates the modified count
        status:
          type: string
          description: Indicates the status
    Balance:
      properties:
        recId:
          type: string
          description: Indicates the unique record id for the balance
        stmtProcDate:
          type: string
          description: Indicates the statement processing date
        coCode:
          type: string
          description: Indicates the company code for the balance
        onlineClearedBal:
          type: string
          format: decimal
          description: Indicates the online cleared balance
        workingBalance:
          type: string
          format: decimal
          description: Indicates the working balance
        onlineActualBal:
          type: string
          format: decimal
          description: Indicates the online actual balance
        currency:
          type: string
          description: Indicates the currency type
        customer:
          type: string
          description: Indicates the customer record
        product:
          type: string
          description: Indicates the product details
        processingTime:
          type: string
          format: date
          description: Indicates the procesing time
        extensionData:
          type: object
          description: Indicates the extension data
    Transaction:
      properties:
        recId:
          type: string
          description: Indicates the unique record id for the transaction
        companyCode:
          type: string
          description: Indicates the company code for the balance
        amountLcy:
          type: string
          description: Indicates the amountLcy
        processingDate:
          type: string
          description: Indicates the procesing date
        transactionCode:
          type: string
          description: Indicates the transaction code
        valueDate:
          type: string
          description: Indicates the value date
        accountNumber:
          type: string
          description: Indicates the account number
        ourReference:
          type: string
          description: Indicates the internal reference
        theirReference:
          type: string
          description: Indicates the external reference
        accountOfficer:
          type: string
          description: Identifier that indicates the account officer
        transReference:
          type: string
          description: Identifier that indicates the trans reference
        bookingDate:
          type: string
          description: Indicates the booking date
        customerId:
          type: string
          description: Indicates the customer id
        currency:
          type: string
          description: Indicates the customer type
        extensionData:
          type: object
    MultiEventDataModels:
     properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
        balances:
          type: array
          items:
            $ref: "#/components/schemas/Balance"
