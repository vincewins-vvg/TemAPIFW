<!--

    *******************************************************************************
    * Copyright Â© Temenos Headquarters SA 2021. All rights reserved.
    *******************************************************************************

-->
<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="com.temenos.security.oidc, com.temenos.irf.web.security.jwt.parser" />
    <context:spring-configured />
    
    <security:http entry-point-ref="authenticationEntryPoint">
        <security:custom-filter after="BASIC_AUTH_FILTER" ref="jwtTokenValidationFilter" />
        <security:session-management>
            <security:concurrency-control max-sessions="1" />
        </security:session-management>
    </security:http>
    <beans:bean id="jwtAuthenticationProvider" class="com.temenos.irf.web.security.jwt.filter.JWTAuthenticationProvider"></beans:bean>
    <security:authentication-manager alias="irfam">
          <security:authentication-provider ref="jwtAuthenticationProvider" />
    </security:authentication-manager>
 
    <beans:bean id="jwtTokenValidationFilter" class="com.temenos.irf.web.security.jwt.filter.JWTTokenValidationFilter">
        <beans:property name="authenticationManager" ref="irfam" />
        <beans:property name="authenticationSuccessHandler">
            <beans:bean class="com.temenos.security.oidc.filter.OidcAuthenticationSuccessHandler" />
        </beans:property>
        <beans:property name="skipUrls" value="/v1/healthz" />
    </beans:bean>

    <!-- OIDC Authenticator -->

    <beans:bean id="oidcAuthenticatorConfig" class="com.temenos.security.oidc.common.OidcAuthenticatorConfig">
        <beans:property name="authHeaders">
            <beans:set>
                <beans:value>Authorization</beans:value>
            </beans:set>
        </beans:property>
        <beans:property name="expiryDelayAllowance" value="0" />
    </beans:bean>

    <beans:bean id="TokenValidatorConfig" class="com.temenos.security.oidc.common.TokenValidationConfig">
       <beans:property name="idTokenSigned" value="false" />
    </beans:bean>
    
    <beans:bean id="customSignature" class="com.temenos.irf.web.security.jwt.validator.CustomSignatureValidator"/>

    <!-- Validations -->
    <!--  Default claims validated are "exp", "iss", "iat"  -->
    <beans:bean id="claim" class="com.temenos.security.oidc.token.validator.ClaimValidator">
        <beans:property name="claims">
            <beans:list>
                <beans:ref bean="exp" />
                <beans:ref bean="iss" />
                <beans:ref bean="iat" />
            </beans:list>
        </beans:property>
    </beans:bean>
    
     <!-- customer specific claim validations, user can pass any number of claims as a key value pair. -->
    <beans:bean id="customClaim" class="com.temenos.irf.web.security.jwt.validator.CustomClaimValidator">
        <beans:property name="customClaims">
            <beans:map>
                <beans:entry key="" value="" />
            </beans:map>
        </beans:property>
    </beans:bean>

    <beans:bean id="validatorComposite" class="com.temenos.security.oidc.token.validator.ValidatorComposite">
        <beans:property name="validations">
            <beans:list>
                <beans:ref bean="algorithm" />
                <beans:ref bean="claim" />
                <beans:ref bean="signature" />
                <beans:ref bean="customClaim" />
            </beans:list>
        </beans:property>
    </beans:bean>
    <!-- END Validation -->
    
     <!-- List of claim that needs to extracted form the token and set into request headers for further processing, eg:TPPId, Consent_id, etc -->
    <beans:bean id="requiredFields" class="com.temenos.irf.web.security.jwt.parser.RequiredFieldsExtractor">
        <beans:property name="claimsToExtract">
            <beans:map>
                <beans:entry key="" value="" />
            </beans:map>
        </beans:property>
    </beans:bean>
    <!-- End Claims Extraction -->

    <!-- OIDC Provider Config -->
    <beans:bean id="oidcProviderConfig" class="com.temenos.security.oidc.common.OidcProviderConfig">
        <beans:property name="oidcProviderConfigMap">
            <beans:map>
                <beans:entry key="iris" value-ref="oidcProviderServer" />
            </beans:map>
        </beans:property>
        <beans:property name="selectedProvider" value="iris" />
    </beans:bean>

    <!-- OIDC Provider Selector End -->

    <!-- OIDC provider Server -->
    <beans:bean id="oidcProviderServer" class="com.temenos.security.oidc.common.OidcProviderServer">
        <beans:property name="issuer" value="https://localhost:9443/oauth2/token" />
        <beans:property name="pkEncoded" value="" />
        <beans:property name="pkCertEncoded" value="" />
        <beans:property name="pkCertFilePath" value="" />
        <beans:property name="pkJwksUri" value="" />
        <beans:property name="decryptingJwkEncoded" value="" />
        <beans:property name="principalClaim" value="sub" />
    </beans:bean>
    <!-- End OIDC provider Server -->

    <!-- Start Relying Party -->
    <beans:bean id="relyingPartyConfig" class="com.temenos.security.oidc.common.RelyingPartyConfig">
        <beans:property name="RelyingPartyClientMap">
            <beans:map>
                <beans:entry key="iris" value-ref="relyingPartyClientDevIris" />
            </beans:map>
        </beans:property>
        <beans:property name="currentRP" value="iris" />
    </beans:bean>

    <beans:bean id="relyingPartyClientDevIris" class="com.temenos.security.oidc.common.RelyingPartyClient">
        <beans:property name="idTokenSignedAlg" value="RS256" />
    </beans:bean>
    <!-- END Relying Party -->

</beans:beans>