######################################################################
# Payment development environment
######################################################################

# Some environment
MONGO_DB_CONTEXT=db/mongo/.
POSTGRESQL_DB_CONTEXT=db/postgresql/.
MONGO_INIT_CONTEXT=db/mongo/init/.
CACHE_CONTEXT=cache/.
DYNAMODB_DB_CONTEXT=db/dynamodb/.
DYNAMODB_INIT_CONTEXT=db/dynamodb/init/.
DYNAMODB_ENDPOINT=http://ms-paymentorder-dynamodb:8000
AWS_ACCESS_KEY_ID="fakeMyKeyId"
AWS_SECRET_ACCESS_KEY="fakeSecretAccessKey"
AWS_REGION=eu-west-2
AWSCLI_CONTEXT=db/dynamodb/awscli/.
DEFAULT_NETWORK_NAME=infinity-network
# Jaeger Context
JAEGER_CONTEXT=monitor/jaeger/.

# Image args
java_options=-Xmx4g -Dtemn.tracer.exporter.host=jaeger -Dtemn.tracer.exporter.port=14268  

# FOR PERFORMANCE PROFILING AGENT
perm_agent_java_options=-javaagent:/usr/local/bytecodecount-agent-1.0.0-SNAPSHOT.jar=package=com/temenos/microservice

#Main Class
SCHEDULER_MAIN_CLASS=com.temenos.microservice.scheduler.app.SchedulerStartupApplication

api_artifactid=ms-paymentorder-api.war
performance_agent_artifactid=bytecodecount-agent-1.0.0-SNAPSHOT.jar
performance_logger_artifactid=bytecodecount-logger-1.0.0-SNAPSHOT.jar
ingester_artifactid=ms-paymentorder-ingester.jar
inboxoutbox_artifactid=ms-paymentorder-inboxoutbox.jar
scheduler_artifactid=ms-paymentorder-scheduler.jar
fileingester_artifactid=ms-fileingester.jar

# Remote debug
REMOTE_DEBUG=-agentlib:jdwp=transport=dt_socket,address=40500,suspend=n,server=y

DB_KEYSPACE=ms_paymentorder
KAFKA_ADVERTISED_HOST_NAME=kafka

# Docker images
API_IMAGE=temenos/ms-paymentorder-service
INGESTER_IMAGE=temenos/ms-paymentorder-ingester
INBOXOUTBOX_IMAGE=temenos/ms-paymentorder-inboxoutbox
KAFKA_INIT_IMAGE=paymentorder/init-kafka
SCHEDULER_IMAGE=temenos/ms-paymentorder-scheduler
FILEINGESTER_IMAGE=temenos/ms-fileingester


# Base images
MONGO_DB_BASE_IMAGE=mongo:4.4.6
ZOOKEEPER_IMAGE=confluentinc/cp-zookeeper:4.1.1
KAFKA_IMAGE=confluentinc/cp-kafka:4.1.1
SCHEMA_REGISTRY_IMAGE=confluentinc/cp-schema-registry:4.1.1
CACHE_BASE_IMAGE=apacheignite/ignite:2.7.6
DYNAMODB_BASE_IMAGE=amazon/dynamodb-local
AWSCLI_BASE_IMAGE=amazon/aws-cli
# Jaeger Docker image
JAEGER_BASE_IMAGE=jaegertracing/all-in-one:1.22

APP_CONTEXT=app/.
DB_MIGRATION_CONTEXT=.
BASE_IMAGE=registry.access.redhat.com/ubi8-micro
STAGING_IMAGE=registry.access.redhat.com/ubi8/ubi-minimal

#PostgreSQL Image for development
POSTGRESQL_DB_BASE_IMAGE=postgres
POSTGRESQL_DB_IMAGE=ms-paymentorder-postgres

#Jaeger Image
JAEGER_IMAGE=ms-paymentorder-jaeger

#PathReader
MS_STORAGE_HOME=path:/tomcat/temp
FILE_STORAGE_URL=/apitest.properties

#File Size
MAX_FILE_UPLOAD_SIZE=70


#api_jacoco_jvm_opts=-javaagent:/tomcat/webapps/jacocoagent.jar=output=tcpserver,excludes=*HibernateProxy*,includes=com.temenos.microservice.framework*,address=*,port=36320,classdumpdir=/tomcat/dump/
#ingester_jacoco_jvm_opts=-javaagent:/app/jacocoagent.jar=output=tcpserver,excludes=*HibernateProxy*,includes=com.temenos.microservice.framework*,address=*,port=36330,classdumpdir=/app/dump/#/tomcat/etc/ssl/certs/.keystore
KEYSTORE_PASS=123456
SSL_ENABLED=true