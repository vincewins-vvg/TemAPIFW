#
# *******************************************************************************
# * Copyright Â© Temenos Headquarters SA 2021. All rights reserved.
# *******************************************************************************
#

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "paymentorder.name" . }}{{ "-scheduler" }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "paymentorder.name" . }}{{ "-scheduler" }}
    helm.sh/chart: {{ include "paymentorder.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      {{- include "paymentorderscheduler.selectorLabels" . | nindent 6 }}
      app: paymentorder-scheduler
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/" .Values.configmap.location ) . | sha256sum }}
      labels:
        {{- include "paymentorderscheduler.selectorLabels" . | nindent 8 }}
        app: paymentorder-scheduler      
    spec:
       volumes: 
       {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "mongodb") }}    
        - name: keystore
          secret:
            secretName: {{ .Values.env.database.tlsClientSecret }}
            items:
            - key: truststore.jks
              path: truststore
            - key: keystore.jks
              path: keystore
       {{- end }}
       {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "postgresql") }}
        - name: postgresql-ssl-volume
          secret:
            secretName: postgresql-ssl-secret    
       {{- end }}  
       containers:
       - name: {{ include "paymentorder.name" . }}{{ "-scheduler" }}
         image: "{{ .Values.image.paymentorderscheduler.repository }}:{{ .Values.image.paymentorderscheduler.tag | default .Chart.AppVersion }}"
         imagePullPolicy: "{{ .Values.image.paymentorderscheduler.pullPolicy }}"
         volumeMounts:
         {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "mongodb") }}    
          - mountPath: "{{ .Values.env.database.TLS_MOUNTPATH }}"        
            name: keystore
            readOnly: true
         {{- end }}
         {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "postgresql") }}
          - name: postgresql-ssl-volume
            mountPath: {{ .Values.env.database.TLS_MOUNTPATH }}        
         {{- end }}
         env:
           - name: POSTGRESQL_USERNAME
             valueFrom:
               secretKeyRef:
                 name: ponosqldbsecret
                 key: POSTGRES_USER 
           - name: POSTGRESQL_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: ponosqldbsecret
                 key: POSTGRESQL_PASSWORD 
        {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "mongodb") }} 
           - name: temn_msf_db_ssl_keystore_password
             valueFrom:
               secretKeyRef:
                 name: keystore-pwd
                 key: password
           - name: temn_msf_db_ssl_truststore_password
             valueFrom:
               secretKeyRef:
                 name: keystore-pwd
                 key: password      
        {{- end }}
         envFrom:
           - configMapRef:
               name: paymentorder-scheduler-config

--- 
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nosqlinboxcatchup-scheduler-config
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "paymentorder.name" . }}{{ "-api" }}
    helm.sh/chart: {{ include "paymentorder.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      {{- include "paymentorderscheduler.selectorLabels" . | nindent 6 }}
      app: paymentorder-scheduler
  template:
    metadata:
      labels:
        {{- include "paymentorderscheduler.selectorLabels" . | nindent 8 }}
        app: paymentorder-scheduler       
    spec:
       volumes:    
       {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "mongodb") }}    
        - name: keystore
          secret:
            secretName: {{ .Values.env.database.tlsClientSecret }}
            items:
            - key: truststore.jks
              path: truststore
            - key: keystore.jks
              path: keystore
       {{- end }}
       {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "postgresql") }}
        - name: postgresql-ssl-volume
          secret:
            secretName: postgresql-ssl-secret    
       {{- end }}  
       containers:
       - name: nosqlinboxcatchup-scheduler-config
         image: "{{ .Values.image.paymentorderscheduler.repository }}:{{ .Values.image.paymentorderscheduler.tag | default .Chart.AppVersion }}"
         imagePullPolicy: "{{ .Values.image.paymentorderscheduler.pullPolicy }}"
         volumeMounts:    
         {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "mongodb") }}    
          - mountPath: "{{ .Values.env.database.TLS_MOUNTPATH }}"        
            name: keystore
            readOnly: true
         {{- end }}
         {{- if and (.Values.env.database.tlsEnabled) (eq .Values.env.database.DATABASE_KEY "postgresql") }}
          - name: postgresql-ssl-volume
            mountPath: {{ .Values.env.database.TLS_MOUNTPATH }}        
         {{- end }}
         env:
          - name: POSTGRESQL_USERNAME
            valueFrom:
              secretKeyRef:
                name: ponosqldbsecret
                key: POSTGRES_USER 
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ponosqldbsecret
                key: POSTGRES_PASSWORD  
          - name: temn.msf.security.tokengen.client.secret
         envFrom:
          - configMapRef:
              name: nosqlinboxcatchup-scheduler-config