#-------------------------------------------------------------
#- Docker compose base definition file to run containers with Kafka.
#-------------------------------------------------------------
---
version: '3.6'
services:
  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"
    ports:
      - "32181:32181"
 
  kafka:
    image: ${KAFKA_IMAGE}
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "10102:10102"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME:-kafka}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_ADVERTISED_HOST_NAME:-kafka}:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    extra_hosts:
      - "moby:127.0.0.1"

  init-kafka:
    image: ${KAFKA_INIT_IMAGE}
    build:
      context: init/kafka/.
      args:
        kafka_version: 2.2.0
        kafka_package: kafka_2.11-2.2.0
    depends_on:
    - kafka
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_CREATE_TOPICS: "table-update-paymentorder:1:1,error-paymentorder:1:1,ms-paymentorder-inbox-topic:1:1,ms-paymentorder-inbox-error-topic:1:1,ms-paymentorder-outbox-topic:1:1"
  
  schema-registry:
    image: ${SCHEMA_REGISTRY_IMAGE}
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT: 300
      SCHEMA_REGISTRY_CUB_ZK_TIMEOUT: 300